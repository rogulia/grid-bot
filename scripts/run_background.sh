#!/bin/bash
# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ systemd: –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ —á–µ—Ä–µ–∑ screen

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
SESSION_NAME="sol-trader-bot"

show_help() {
    echo ""
    echo "=========================================="
    echo "  SOL-Trader Background Runner"
    echo "=========================================="
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/run_background.sh [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start      - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ"
    echo "  stop       - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  attach     - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É (–æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è: Ctrl+A, D)"
    echo "  status     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç"
    echo "  logs       - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo ""
    echo "‚ÑπÔ∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç screen –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ñ–æ–Ω–µ"
    echo "   (–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç)"
    echo ""
    echo "–î–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ systemd:"
    echo "  sudo bash scripts/setup_service.sh"
    echo ""
}

check_screen() {
    if ! command -v screen &> /dev/null; then
        echo "‚ùå screen –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo ""
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ screen:"
        echo "  sudo apt-get install screen"
        echo ""
        echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ systemd —Å–µ—Ä–≤–∏—Å:"
        echo "  sudo bash scripts/setup_service.sh"
        echo ""
        exit 1
    fi
}

is_running() {
    screen -list | grep -q "$SESSION_NAME"
}

case "$1" in
    start)
        check_screen

        if is_running; then
            echo "‚ö†Ô∏è  –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
            echo ""
            echo "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: ./scripts/run_background.sh attach"
            echo "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ./scripts/run_background.sh stop"
            exit 1
        fi

        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ..."
        cd "$PROJECT_DIR"
        screen -dmS "$SESSION_NAME" bash -c "source .venv/bin/activate && python src/main.py"
        sleep 2

        if is_running; then
            echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ!"
            echo ""
            echo "üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
            echo "  –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–æ—Ç—É:  ./scripts/run_background.sh attach"
            echo "  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:     ./scripts/run_background.sh status"
            echo "  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞:      ./scripts/run_background.sh stop"
            echo "  –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏:        ./scripts/run_background.sh logs"
            echo ""
            echo "‚ÑπÔ∏è  –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –±–æ—Ç–∞ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –µ–≥–æ:"
            echo "   –ù–∞–∂–º–∏—Ç–µ: Ctrl+A, –∑–∞—Ç–µ–º D"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
            echo ""
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "  source .venv/bin/activate && python src/main.py"
        fi
        ;;

    stop)
        check_screen

        if ! is_running; then
            echo "‚ÑπÔ∏è  –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            exit 0
        fi

        echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞..."
        screen -S "$SESSION_NAME" -X quit
        sleep 1

        if ! is_running; then
            echo "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
            echo ""
            echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:"
            echo "  screen -S $SESSION_NAME -X quit"
        fi
        ;;

    attach)
        check_screen

        if ! is_running; then
            echo "‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
            echo ""
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:"
            echo "  ./scripts/run_background.sh start"
            exit 1
        fi

        echo "üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–æ—Ç—É..."
        echo ""
        echo "‚ÑπÔ∏è  –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –ù–ï –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –±–æ—Ç–∞:"
        echo "   –ù–∞–∂–º–∏—Ç–µ: Ctrl+A, –∑–∞—Ç–µ–º D"
        echo ""
        sleep 2
        screen -r "$SESSION_NAME"
        ;;

    status)
        check_screen

        if is_running; then
            echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
            echo ""
            screen -list | grep "$SESSION_NAME"
            echo ""
            echo "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: ./scripts/run_background.sh attach"
        else
            echo "‚èπÔ∏è  –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            echo ""
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç—å: ./scripts/run_background.sh start"
        fi
        ;;

    logs)
        LATEST_LOG=$(ls -t $PROJECT_DIR/logs/bot_*.log 2>/dev/null | head -1)
        if [ -z "$LATEST_LOG" ]; then
            echo "‚ùå –õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ $PROJECT_DIR/logs/"
        else
            echo "üìã –õ–æ–≥–∏ –±–æ—Ç–∞ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
            echo "   $LATEST_LOG"
            echo ""
            tail -f "$LATEST_LOG"
        fi
        ;;

    help|--help|-h|"")
        show_help
        ;;

    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac
